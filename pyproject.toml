[tool.poetry]
name = "toldwords"
version = "0.2.0"
description = "Using ChatGPT to make keywords for the papers from COSCUP."
authors = ["Toomore Chiang <toomore0929@gmail.com>"]
license = 'MIT'
readme = "README.md"
homepage = 'https://github.com/toomore/toldwords'
repository = 'https://github.com/toomore/toldwords'
packages = [
    { include = "toldwords" },
]
keywords = ['API', 'ChatGPT', 'pretalx', 'COSCUP', 'openai']
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Natural Language :: Chinese (Traditional)",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python",
  "Topic :: Communications :: Chat",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.9"
requests = "^2.28.2"
certifi = "^2022.12.7"
pydantic = "^1.10.6"

[tool.poetry.group.dev.dependencies]
mypy = "^1.1.1"
pylint = "^2.17.0"
autopep8 = "^2.0.2"
types-requests = "^2.28.11.15"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# https://githb.com/PyCQA/isort/wiki/isort-Settings
[tool.isort]
virtual_env = "./.venv"

[tool.mypy]
# --strict
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
implicit_reexport = false
strict_equality = true
# --strict end
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pylint.main]
extension-pkg-whitelist = "pydantic"
init-hook="import os, sys; sys.path.insert(0, os.getcwd())"
good-names="i,j,k,ex,Run,_,id"
